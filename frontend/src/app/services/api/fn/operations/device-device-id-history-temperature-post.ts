/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';

import { TemperatureHistory } from '../../models/temperature-history';

export interface DeviceDeviceIdHistoryTemperaturePost$Params {

/**
 * The ID of the device whose temperature history should be retrieved
 */
  deviceId: string;
      body: {

/**
 * The start of the interval as a timestamp in seconds
 */
'startTimestamp'?: number;

/**
 * The end of the interval as a timestamp in seconds
 */
'endTimestamp'?: number;
}
}

export function deviceDeviceIdHistoryTemperaturePost(http: HttpClient, rootUrl: string, params: DeviceDeviceIdHistoryTemperaturePost$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<TemperatureHistory>>> {
  const rb = new RequestBuilder(rootUrl, deviceDeviceIdHistoryTemperaturePost.PATH, 'post');
  if (params) {
    rb.path('deviceId', params.deviceId, {});
    rb.body(params.body, 'application/json');
  }

  return http.request(
    rb.build({ responseType: 'json', accept: 'application/json', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<Array<TemperatureHistory>>;
    })
  );
}

deviceDeviceIdHistoryTemperaturePost.PATH = '/device/{deviceId}/history/temperature';
